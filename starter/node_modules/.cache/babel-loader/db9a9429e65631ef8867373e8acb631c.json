{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yaron\\\\Desktop\\\\new projects\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport ListBooksTitle from \"./ListBooksTitle\";\nimport ListBooksContant from \"./ListBooksContent\";\nimport { update, getAll, search } from \"./BooksAPI\";\nimport Book from \"./Book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [books, setBooks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    getAll().then(books => {\n      setBooks(books);\n    });\n  }, []);\n  useEffect(() => {\n    if (query) {\n      search(query, 20).then(results => {\n        console.warn(results);\n        setSearchResults(results);\n      });\n    }\n  }, [query]);\n\n  async function onChange(book, shelf) {\n    await update(book, shelf);\n    setBooks(books.filter(b => b.id !== book.id).concat({ ...book,\n      shelf\n    }));\n  }\n\n  const currentlyReading = books.filter(book => book.shelf === 'currentlyReading');\n  const wantToRead = books.filter(book => book.shelf === 'wantToRead');\n  const read = books.filter(book => book.shelf === 'read');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showSearchPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"close-search\",\n          onClick: () => setShowSearchpage(!showSearchPage),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by title, author, or ISBN\",\n            onChange: event => setQuery(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-results\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\",\n          children: searchResults && searchResults.map(book => /*#__PURE__*/_jsxDEV(Book, {\n            book: book,\n            onChange: onChange\n          }, book.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 62\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(ListBooksTitle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ListBooksContant, {\n        currentlyReading: currentlyReading,\n        wantToRead: wantToRead,\n        read: read,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: () => setShowSearchpage(!showSearchPage),\n          children: \"Add a book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9xrOLjToYd6NRfFfAD3Q6pMjpM8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Yaron/Desktop/new projects/nd0191-c1-myreads/starter/src/App.js"],"names":["useState","useEffect","ListBooksTitle","ListBooksContant","update","getAll","search","Book","App","showSearchPage","setShowSearchpage","books","setBooks","query","setQuery","searchResults","setSearchResults","then","results","console","warn","onChange","book","shelf","filter","b","id","concat","currentlyReading","wantToRead","read","event","target","value","map"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAAQC,MAAR,EAAgBC,MAAhB,EAAwBC,MAAxB,QAAqC,YAArC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACfI,IAAAA,MAAM,GAAGY,IAAT,CAAeN,KAAD,IAAW;AACvBC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAV,EAAAA,SAAS,CAAE,MAAM;AACf,QAAIY,KAAJ,EAAW;AACTP,MAAAA,MAAM,CAACO,KAAD,EAAQ,EAAR,CAAN,CAAkBI,IAAlB,CAAwBC,OAAD,IAAa;AACpCC,QAAAA,OAAO,CAACC,IAAR,CAAaF,OAAb;AACAF,QAAAA,gBAAgB,CAACE,OAAD,CAAhB;AACC,OAHD;AAID;AACF,GAPQ,EAOL,CAACL,KAAD,CAPK,CAAT;;AASD,iBAAeQ,QAAf,CAAyBC,IAAzB,EAA+BC,KAA/B,EAAsC;AAC/B,UAAMnB,MAAM,CAACkB,IAAD,EAAOC,KAAP,CAAZ;AACAX,IAAAA,QAAQ,CAACD,KAAK,CAACa,MAAN,CAAcC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASJ,IAAI,CAACI,EAAjC,EAAsCC,MAAtC,CAA6C,EAAC,GAAGL,IAAJ;AAAUC,MAAAA;AAAV,KAA7C,CAAD,CAAR;AAAyE;;AAE9E,QAAMK,gBAAgB,GAAGjB,KAAK,CAACa,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAe,kBAAtC,CAAzB;AACD,QAAMM,UAAU,GAAGlB,KAAK,CAACa,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAe,YAAtC,CAAnB;AACA,QAAMO,IAAI,GAAGnB,KAAK,CAACa,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAe,MAAtC,CAAb;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGd,cAAc,gBACb;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,OAAO,EAAE,MAAMC,iBAAiB,CAAC,CAACD,cAAF,CAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,kCAFd;AAGE,YAAA,QAAQ,EAAGsB,KAAD,IAAWjB,QAAQ,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd;AAH/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBACIlB,aAAa,IAAIA,aAAa,CAACmB,GAAd,CAAmBZ,IAAD,iBAAU,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEA,IAAZ;AAAgC,YAAA,QAAQ,EAAID;AAA5C,aAAuBC,IAAI,CAACI,EAA5B;AAAA;AAAA;AAAA;AAAA,kBAA5B;AADrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADa,gBA0BX;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,gBAAD;AAAkB,QAAA,gBAAgB,EAAEE,gBAApC;AAAsD,QAAA,UAAU,EAAEC,UAAlE;AAA8E,QAAA,IAAI,EAAEC,IAApF;AAA0F,QAAA,QAAQ,EAAIT;AAAtG;AAAA;AAAA;AAAA;AAAA,cAFF,eAGA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAI,UAAA,IAAI,EAAC,GAAT;AAAa,UAAA,OAAO,EAAE,MAAMX,iBAAiB,CAAC,CAACD,cAAF,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BN;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GAnEQD,G;;KAAAA,G;AAqET,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ListBooksTitle from \"./ListBooksTitle\";\r\nimport ListBooksContant from \"./ListBooksContent\";\r\nimport {update, getAll, search} from \"./BooksAPI\";\r\nimport Book from \"./Book\";\r\n\r\nfunction App() {\r\n  const [showSearchPage, setShowSearchpage] = useState(false);\r\n  const [books, setBooks] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n    \r\n  useEffect (() => {\r\n    getAll().then((books) => {\r\n      setBooks(books);\r\n    })\r\n  }, []); \r\n\r\n  useEffect (() => {\r\n    if (query) {\r\n      search(query, 20).then((results) => {\r\n      console.warn(results);\r\n      setSearchResults(results);\r\n      });\r\n    }\r\n  } , [query]);\r\n\r\n async function onChange (book, shelf) { \r\n        await update(book, shelf)\r\n        setBooks(books.filter( b => b.id !== book.id ).concat({...book, shelf}))}\r\n\r\n   const currentlyReading = books.filter((book) => book.shelf === 'currentlyReading');\r\n  const wantToRead = books.filter((book) => book.shelf === 'wantToRead');\r\n  const read = books.filter((book) => book.shelf === 'read');\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {showSearchPage ? (\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <a\r\n            \r\n              className=\"close-search\"\r\n              onClick={() => setShowSearchpage(!showSearchPage)}\r\n            >\r\n              Close\r\n            </a>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search by title, author, or ISBN\"\r\n                onChange={(event) => setQuery(event.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n               {searchResults && searchResults.map((book) => <Book book={book} key={book.id} onChange = {onChange} />)}\r\n\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n          <div className=\"list-books\">\r\n            <ListBooksTitle/>\r\n            <ListBooksContant currentlyReading={currentlyReading} wantToRead={wantToRead} read={read} onChange = {onChange} />\r\n          <div className=\"open-search\">\r\n            <a  href=\"#\" onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>\r\n          </div>\r\n        </div>\r\n      )}\r\n     </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}